# coding: utf-8

"""
    Endpoint Test Results API

    Retrieve results for scheduled and dynamic tests on endpoint agents.

    The version of the OpenAPI document: 7.0.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from thousandeyes_sdk.endpoint_test_results.models.endpoint_real_user_test_detail import EndpointRealUserTestDetail

class TestEndpointRealUserTestDetail(unittest.TestCase):
    """EndpointRealUserTestDetail unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EndpointRealUserTestDetail:
        """Test EndpointRealUserTestDetail
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EndpointRealUserTestDetail`
        """
        model = EndpointRealUserTestDetail()
        if include_optional:
            return EndpointRealUserTestDetail(
                agent_id = '861b7557-cd57-4bbb-b648-00bddf88ef49',
                committed = '2022-07-17T22:00:54Z',
                var_date = '2022-07-17T22:00:54Z',
                experience_score = 0.5,
                number_of_pages = 2,
                organization_name = 'T-2 Access Network',
                port = 443,
                protocol = 'https',
                round_id = 1384309800,
                source_address = '84.255.241.1',
                id = '07625:1490529480:aVDViw0i',
                visited_site = 'www.thousandeyes.com',
                browser = thousandeyes_sdk.endpoint_test_results.models.endpoint_browser.EndpointBrowser(
                    name = 'Google Chrome', 
                    version = '116.0.0.0', ),
                coordinates = thousandeyes_sdk.endpoint_test_results.models.real_user_test_coordinates.RealUserTestCoordinates(
                    latitude = 46.0552778, 
                    location = 'Slovenia', 
                    longitude = 14.5144444, ),
                pages = [
                    thousandeyes_sdk.endpoint_test_results.models.real_user_test_page.RealUserTestPage(
                        page_id = 'C31gBrYJ', 
                        page_title = 'Network Performance Resources | ThousandEyes', 
                        page_url = 'https://app.thousandeyes.com/settings/integrations', 
                        load_date = '2022-07-17T22:00:54Z', 
                        response_code = 200, 
                        page_timings = thousandeyes_sdk.endpoint_test_results.models.real_user_test_page_timings.RealUserTestPageTimings(
                            on_content_load = 1483, 
                            on_load = 4569, ), )
                    ],
                network = thousandeyes_sdk.endpoint_test_results.models.real_user_test_network.RealUserTestNetwork(
                    network_profile = null, 
                    system_metrics = thousandeyes_sdk.endpoint_test_results.models.system_metrics.SystemMetrics(
                        start_time_ms = 1581508857327, 
                        end_time_ms = 1581508867333, 
                        cpu_utilization = thousandeyes_sdk.endpoint_test_results.models.cpu_utilization.CpuUtilization(
                            min = 0.22, 
                            max = 0.75, 
                            mean = 0.55, 
                            median = 0.61, 
                            std_dev = 0.01, 
                            count = 150, ), 
                        physical_memory_used_bytes = thousandeyes_sdk.endpoint_test_results.models.physical_memory_used_bytes.PhysicalMemoryUsedBytes(
                            min = 1.2, 
                            max = 2.5, 
                            mean = 1.77, 
                            median = 1.85, 
                            std_dev = 0.25, 
                            count = 155, ), 
                        physical_memory_total_bytes = 1024, ), 
                    gateway_ping = null, 
                    ping = null, 
                    traceroute = null, 
                    connect_rtt = 77.777, 
                    is_icmp_blocked = True, 
                    errors = ["ping: Request timed out before getting response"], 
                    vpn_ping = null, 
                    vpn_traceroute = null, )
            )
        else:
            return EndpointRealUserTestDetail(
        )
        """

    def testEndpointRealUserTestDetail(self):
        """Test EndpointRealUserTestDetail"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
