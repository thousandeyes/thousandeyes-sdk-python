# coding: utf-8

"""
    Endpoint Test Results API

    Retrieve results for scheduled and dynamic tests on endpoint agents.

    The version of the OpenAPI document: 7.0.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from thousandeyes_sdk.endpoint_test_results.models.system_metrics import SystemMetrics

class TestSystemMetrics(unittest.TestCase):
    """SystemMetrics unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SystemMetrics:
        """Test SystemMetrics
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SystemMetrics`
        """
        model = SystemMetrics()
        if include_optional:
            return SystemMetrics(
                start_time_ms = 1581508857327,
                end_time_ms = 1581508867333,
                cpu_utilization = thousandeyes_sdk.endpoint_test_results.models.cpu_utilization.CpuUtilization(
                    min = 0.22, 
                    max = 0.75, 
                    mean = 0.55, 
                    median = 0.61, 
                    std_dev = 0.01, 
                    count = 150, ),
                physical_memory_used_bytes = thousandeyes_sdk.endpoint_test_results.models.physical_memory_used_bytes.PhysicalMemoryUsedBytes(
                    min = 1.2, 
                    max = 2.5, 
                    mean = 1.77, 
                    median = 1.85, 
                    std_dev = 0.25, 
                    count = 155, ),
                physical_memory_total_bytes = 1024
            )
        else:
            return SystemMetrics(
        )
        """

    def testSystemMetrics(self):
        """Test SystemMetrics"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
