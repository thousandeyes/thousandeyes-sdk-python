# coding: utf-8

"""
    Dashboards API

    Manage ThousandEyes Dashboards.

    The version of the OpenAPI document: 7.0.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from thousandeyes_sdk.dashboards.models.api_test_table_data import ApiTestTableData

class TestApiTestTableData(unittest.TestCase):
    """ApiTestTableData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiTestTableData:
        """Test ApiTestTableData
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiTestTableData`
        """
        model = ApiTestTableData()
        if include_optional:
            return ApiTestTableData(
                test_id = '68256',
                test_name = 'Http Test Name',
                target = 'www.google.com',
                test_type = 'Web - HTTP Server',
                alert_count = 398,
                is_shared = True,
                graphlets = [
                    thousandeyes_sdk.dashboards.models.api_test_table_graphlets_data.ApiTestTableGraphletsData(
                        metric = 'Availability', 
                        test_id = '68257', 
                        points = [
                            thousandeyes_sdk.dashboards.models.api_graphlet_point.ApiGraphletPoint(
                                x = 1580403900, 
                                y = 128.249, )
                            ], )
                    ]
            )
        else:
            return ApiTestTableData(
        )
        """

    def testApiTestTableData(self):
        """Test ApiTestTableData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
