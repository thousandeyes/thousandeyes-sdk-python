# coding: utf-8

"""
    Dashboards API

    Manage ThousandEyes Dashboards.

    The version of the OpenAPI document: 7.0.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from thousandeyes_sdk.dashboards.models.api_numbers_card import ApiNumbersCard

class TestApiNumbersCard(unittest.TestCase):
    """ApiNumbersCard unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiNumbersCard:
        """Test ApiNumbersCard
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiNumbersCard`
        """
        model = ApiNumbersCard()
        if include_optional:
            return ApiNumbersCard(
                min_scale = 1.0,
                max_scale = 100.0,
                unit = 'Mbps',
                id = '1234',
                description = 'Widget Title',
                measure = thousandeyes_sdk.dashboards.models.api_widget_measure.ApiWidgetMeasure(
                    type = 'MEAN', 
                    percentile_value = 95.0, ),
                compare_to_previous_value = True,
                fixed_timespan = thousandeyes_sdk.dashboards.models.api_duration.ApiDuration(
                    value = 10, 
                    unit = 'Days', ),
                should_exclude_alert_suppression_windows = True,
                data_source = 'ENDPOINT_AGENTS',
                metric_group = 'BGP',
                direction = 'FROM_TARGET',
                metric = 'ENDPOINT_GATEWAY_CPU_LOAD_PERCENT',
                filters = {"TEST":[5187,5227],"ENDPOINT_MACHINE_ID":["fbd0050c-07f7-43f7-9631-14b32f096962"]}
            )
        else:
            return ApiNumbersCard(
        )
        """

    def testApiNumbersCard(self):
        """Test ApiNumbersCard"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
