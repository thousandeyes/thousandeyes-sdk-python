# coding: utf-8

"""
    Test Results API

    Get test result metrics for Cloud and Enterprise Agent tests.

    The version of the OpenAPI document: 7.0.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from thousandeyes_sdk.test_results.models.bgp_test_route_information_result import BgpTestRouteInformationResult

class TestBgpTestRouteInformationResult(unittest.TestCase):
    """BgpTestRouteInformationResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BgpTestRouteInformationResult:
        """Test BgpTestRouteInformationResult
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BgpTestRouteInformationResult`
        """
        model = BgpTestRouteInformationResult()
        if include_optional:
            return BgpTestRouteInformationResult(
                var_date = '2022-07-17T22:00:54Z',
                round_id = 1384309800,
                links = None,
                monitor = thousandeyes_sdk.test_results.models.monitor.Monitor(
                    monitor_id = '281474976710706', 
                    monitor_name = 'Vancouver, Canada - Bell Canada (AS 6539)', 
                    country_id = 'US', ),
                prefix_id = '215',
                prefix = '99.128.0.0/11',
                is_active = True,
                hops = [
                    thousandeyes_sdk.test_results.models.bgp_hop.BgpHop(
                        asn = 852, 
                        as_name = 'Telus Advanced Communications', )
                    ]
            )
        else:
            return BgpTestRouteInformationResult(
        )
        """

    def testBgpTestRouteInformationResult(self):
        """Test BgpTestRouteInformationResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
