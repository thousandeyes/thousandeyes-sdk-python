# coding: utf-8

"""
    Agents API

     ## Overview Manage all agents available to your account in ThousandEyes, including both Cloud and Enterprise Agents.

    The version of the OpenAPI document: 7.0.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from thousandeyes_sdk.agents.models.notification_rule_detail import NotificationRuleDetail

class TestNotificationRuleDetail(unittest.TestCase):
    """NotificationRuleDetail unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NotificationRuleDetail:
        """Test NotificationRuleDetail
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NotificationRuleDetail`
        """
        model = NotificationRuleDetail()
        if include_optional:
            return NotificationRuleDetail(
                rule_id = '281474976710706',
                rule_name = 'Default Agent Offline Notification',
                expression = '((lastContact >= 30 min))',
                notify_on_clear = True,
                is_default = False,
                notifications = thousandeyes_sdk.agents.models.notification.Notification(
                    email = thousandeyes_sdk.agents.models.alert_email.AlertEmail(
                        message = 'This test is failing, check as soon as possible.', 
                        recipients = ["user1@thousandeyes.com","user2@cisco.com"], ), 
                    third_party = [
                        thousandeyes_sdk.agents.models.alert_integration_base.AlertIntegrationBase(
                            integration_id = 'wb-78', 
                            integration_name = 'integrationSlack1', 
                            integration_type = 'slack', 
                            target = 'https://hooks.slack.com/services/asd/0VqDYEpidpHVAK397x8PBsmZ', 
                            auth_method = 'Basic', 
                            auth_user = 'user123', 
                            auth_token = '0VqDYEpidpHVAK397x8PBsmZ', 
                            channel = '#slackChannel', )
                        ], 
                    webhook = [
                        thousandeyes_sdk.agents.models.alert_integration_base.AlertIntegrationBase(
                            integration_id = 'wb-78', 
                            integration_name = 'integrationSlack1', 
                            target = 'https://hooks.slack.com/services/asd/0VqDYEpidpHVAK397x8PBsmZ', 
                            auth_method = 'Basic', 
                            auth_user = 'user123', 
                            auth_token = '0VqDYEpidpHVAK397x8PBsmZ', 
                            channel = '#slackChannel', )
                        ], ),
                agents = [
                    null
                    ],
                links = thousandeyes_sdk.agents.models.self_links.SelfLinks(
                    self = thousandeyes_sdk.agents.models.link.Link(
                        href = 'https://api.thousandeyes.com/v7/link/to/resource/id', 
                        templated = True, 
                        type = '', 
                        deprecation = '', 
                        name = '', 
                        profile = '', 
                        title = '', 
                        hreflang = '', ), )
            )
        else:
            return NotificationRuleDetail(
        )
        """

    def testNotificationRuleDetail(self):
        """Test NotificationRuleDetail"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
